import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '27.0.1'

    defaultConfig {
        applicationId "com.stone.njubbs"
        minSdkVersion 23
        targetSdkVersion 25
        versionCode getCustomVersionCode()
        versionName "v${getVersionNameMajor()}.${dateStamp()}.${getCommitID()}"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'junit:junit:4.12'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation project(':volley')
    implementation 'com.android.support:recyclerview-v7:23.1.1'
    implementation 'com.android.support:design:23.1.1'
    implementation 'com.android.support:appcompat-v7:23.1.1'
}

def dateStamp() {
    def df = new SimpleDateFormat("yyMMdd")
    return df.format(new Date())
}

def getCommitID() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'show', '-s', '--pretty=oneline'
        standardOutput = stdout
    }
    return stdout.toString().trim().substring(0, 7)
}

def getVersionNameMajor() {
    def manifest = new XmlSlurper().parse(file("src/main/AndroidManifest.xml"))
    if (manifest == null) {
        return "1.0.0"
    }
    def vn = manifest['@android:versionName'].text()
    if (vn != null && !vn.equals("")) {
        return vn
    } else {
        return "1.0.0"
    }
}

def getCustomVersionCode() {
    def manifest = new XmlSlurper().parse(file("src/main/AndroidManifest.xml"))
    if (manifest == null) {
        return 100000000
    }
    def vc = manifest['@android:revisionCode'].text()
    if (vc != null && !vc.equals("")) {
        vc = Integer.parseInt(vc)
        return vc
    } else {
        return 100000000
    }
}